#========================================================================
# Get-Password Function Generated By: Anders Wahlqvist
# Website: DollarUnderscore (http://dollarunderscore.azurewebsites.net)
# http://poshcode.org/2793
#========================================================================
 
function Get-Password
{
    param(
    [int] $PasswordLength = 7)
 
    # Set how many different character types there are
    $NrOfCharacterTypes=3
 
    # Make sure the password we are building are at least as long
    # as the character types we want to use.
 
    if ($PasswordLength -lt $NrOfCharacterTypes) {
        Write-Error "The password must be at least $NrOfCharacterTypes characters long."
        return
    }
 
    # Set which characters should be used
    $CapitalLetters=For ($a=65;$a –le 90;$a++) { [char][byte]$a }
    $SmallLetters=For ($a=97;$a –le 122;$a++) { [char][byte]$a }
    $Numbers=0..9
    $SpecialCharacters="!","@","#","&","?","*"
 
    # Create one array containg all of them
    $AllCharacters=$CapitalLetters+$SmallLetters+$Numbers+$SpecialCharacters
 
    # Loop until we reach the password length
    for ($CharNr=$NrOfCharacterTypes;$CharNr -le $PasswordLength;$CharNr++) {
       
        # If this is the first run, we should add one of every character type
        if ($CharNr -eq $NrOfCharacterTypes) {
            $CharacterString+=($CapitalLetters | Get-Random)
            $CharacterString+=($SmallLetters | Get-Random)
            $CharacterString+=($Numbers | Get-Random)
            $CharacterString+=($SpecialCharacters | Get-Random)
        }
        # If not, start adding random characters.
        else {
            $CharacterString+=($AllCharacters | Get-Random)
        }
    }
 
    # Create an char array of the characters
    $TempPasswordArray=$CharacterString.ToString().ToCharArray()
 
    # Randomize the order of them
    $PasswordToReturn=($TempPasswordArray | Get-Random -Count $TempPasswordArray.length) -join ''
 
    # Send it back to the pipeline
    Write-Output $PasswordToReturn
}
# End Anders
#========================================================================


#======================================
# Create user in AD and set password
# Shelby Mader - June 2022
#======================================

#import AD module
ipmo ActiveDirectory

# * UPDATE THESE LINES WITH NEW USER INFO *
$dept = ""
$display = "John Doe"
$first = "John"
$last = "Doe"
$mobile = ""
$phone = ""
$title = ""
$upn = "jdoe@sjno.net"
$sam = "jdoe"
# / UPDATE THESE LINES WITH NEW USER INFO /

$proxy = "SMTP:"+$upn
$downlevel = "SJNO\"+"$sam"
write "$sam, $dept, $display, $first, $last, $mobile, $phone, $title, $upn"

New-ADUser -Path 'OU=User,OU=SJNO_Accounts,DC=sjno,DC=net' -SamAccountName $sam -name $sam -UserPrincipalName $upn -GivenName $first -Surname $last -DisplayName $display -Title $title -Department $dept -EmailAddress $upn 
Set-ADUser $sam -Add @{proxyAddresses = $proxy}

$pw = Get-Password
Set-ADAccountPassword $sam -NewPassword (ConvertTo-SecureString -AsPlainText "$pw" -Force)

write "-------------------------------------------------------------------------------"
write "DisplayName, SamAccountName, UserPrincipalName, Down-Level Logon Name, Password"
write "$display, $sam, $upn, $downlevel, $pw"
write "-------------------------------------------------------------------------------"
write ""

# End Shelby
#======================================